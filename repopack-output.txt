This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repopack on: 2024-09-29T22:17:20.582Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repopack's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repopack, visit: https://github.com/yamadashy/repopack

================================================================
Repository Structure
================================================================
public/
  index.html
  robots.txt
src/
  assets/
    img/
      logo_black.svg
      logo_white.svg
  components/
    ProjectCard/
      ProjectCardA.jsx
      ProjectCardA.scss
      ProjectCardB.jsx
      ProjectCardB.scss
      ProjectCardC.jsx
      ProjectCardC.scss
      ProjectCardD.jsx
      ProjectCardD.scss
    CapabilitiesTable.jsx
    CapabilitiesTable.scss
    Carousel.jsx
    Carousel.scss
    Footer.jsx
    Footer.scss
    Header.jsx
    Overview.jsx
    Overview.scss
    SidebarNavigation.jsx
    SidebarNavigation.scss
  pages/
    CaseStudy/
      CaseStudy.jsx
      CaseStudy.scss
      CaseStudy01.jsx
      CaseStudy02.jsx
      MultimediaContent.jsx
    About.jsx
    About.scss
    Gallery.jsx
    Gallery.scss
    Home.jsx
    Home.scss
    Work.jsx
    Work.scss
  App.css
  App.jsx
  App.test.js
  index.js
  index.scss
  logo.svg
  reportWebVitals.js
  setupTests.js
.gitignore
package.json
README.md

================================================================
Repository Files
================================================================

================
File: public/index.html
================
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="description"
      content="Web site created using create-react-app"
    />
    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
    <!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <!--
      Notice the use of %PUBLIC_URL% in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.

      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.
    -->
    <title>React App</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
    <!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    -->
  </body>
</html>

================
File: public/robots.txt
================
# https://www.robotstxt.org/robotstxt.html
User-agent: *
Disallow:

================
File: src/assets/img/logo_black.svg
================
<svg width="200" height="200" viewBox="0 0 200 200" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M97.8571 25V110.714C74.1878 110.714 55 91.5265 55 67.8571C55 44.1878 74.1878 25 97.8571 25Z" fill="#161616"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M143.732 67.8569V25H100.875C100.875 48.6692 120.063 67.8569 143.732 67.8569Z" fill="#161616"/>
<ellipse cx="76.4286" cy="156.429" rx="21.4286" ry="21.4286" fill="#161616"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M143.868 70.8571H143.732V113.714H100.875V113.714C100.875 90.0447 120.063 70.8569 143.732 70.8569L143.868 70.8571ZM143.732 113.714H100.875L100.875 135.143L100.875 178C124.544 178 143.732 158.812 143.732 135.143H143.585L143.732 134.995V113.714Z" fill="#161616"/>
</svg>

================
File: src/assets/img/logo_white.svg
================
<svg width="200" height="200" viewBox="0 0 200 200" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M97.8571 25V110.714C74.1878 110.714 55 91.5265 55 67.8571C55 44.1878 74.1878 25 97.8571 25Z" fill="white"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M143.732 67.8569V25H100.875C100.875 48.6692 120.063 67.8569 143.732 67.8569Z" fill="white"/>
<ellipse cx="76.4286" cy="156.429" rx="21.4286" ry="21.4286" fill="white"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M143.868 70.8571H143.732V113.714H100.875L100.875 113.714C100.875 90.0447 120.063 70.8569 143.732 70.8569L143.868 70.8571ZM143.732 113.714H100.875L100.875 135.143L100.875 178C124.544 178 143.732 158.812 143.732 135.143H143.585L143.732 134.995V113.714Z" fill="white"/>
</svg>

================
File: src/components/ProjectCard/ProjectCardA.jsx
================
import React from 'react';
import { Column, AspectRatio, Tag } from '@carbon/react';
import { ArrowRight } from '@carbon/icons-react';
import './ProjectCardA.scss';

const ProjectCardA = ({ title, description, imageSrc, link, tags, icon }) => {
  return (
    <Column sm={4} md={4} lg={8} className="project-card">
      <a href={link} className="project-card__link">
        <div className="project-card__content">
          <div className="project-card__text">
            <h3>{title}</h3>
            <p>{description}</p>
            {Array.isArray(tags) && tags.length > 0 && (
              <div className="project-card__tags">
                {tags.map((tag, index) => (
                  <Tag key={index} type="blue" size="md">
                    {tag}
                  </Tag>
                ))}
              </div>
            )}
            <div className="project-card__view">
              <ArrowRight size={16} />
            </div>
          </div>
          <div className="project-card__image-container">
            <Column sm={4} md={4} lg={5}>
              <img src={imageSrc} alt={title} className="project-card__image" />
            </Column>
          </div>
          {icon && <img src={icon} alt="Project icon" className="project-card__icon" />}
        </div>
      </a>
    </Column>
  );
};

ProjectCardA.defaultProps = {
  tags: [],
};

export default ProjectCardA;

================
File: src/components/ProjectCard/ProjectCardA.scss
================
@use '@carbon/react/scss/theme' as *;
@use '@carbon/react/scss/spacing' as *;
@use '@carbon/react/scss/type' as *;
@use '@carbon/react/scss/breakpoint' as *;

.project-card {
  margin-bottom: $spacing-07;

  &__link {
    display: block;
    text-decoration: none;
    color: inherit;
    height: 100%;
  }


  &__content {
    display: flex;
    height: 100%;
    background-color: $layer-01;
    position: relative;
    overflow: hidden;
    
    &:hover{
      background-color: $layer-hover-01;
    }
  }
  
  &__text {
    padding: $spacing-05;
    display: flex;
    flex-direction: column;
    width: 41.66%;

    h3 {
      @include type-style('productive-heading-03');
      margin-bottom: $spacing-03;
    }

    p {
      @include type-style('body-long-01');
      margin-bottom: $spacing-05;
      text-wrap: wrap;
    }
  }

  &__tags {
    display: flex;
    flex-wrap: wrap;
    gap: $spacing-03;
    margin-bottom: $spacing-05;
  }

  &__view {
    @include type-style('body-short-02');
    display: flex;
    align-items: center;
    color: $link-primary;
    margin-top: auto;

    svg {
      margin-left: $spacing-03;
    }
  }

  &__image-container {
    width: 58.33%; // 7/12 of the card width
    position: absolute;
    right: 0;
    top: 0;
    bottom: 0;
  }

  &__image {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  &__icon {
    position: absolute;
    left: $spacing-05;
    bottom: $spacing-05;
    width: 16px; 
    height: 16px; 
  }
}

================
File: src/components/ProjectCard/ProjectCardB.jsx
================
import React from 'react';
import { ClickableTile, Column } from '@carbon/react';
import { ArrowRight } from '@carbon/icons-react';
import './ProjectCardB.scss';
import styled from 'styled-components';

const StyledColumn = styled(Column)`
  padding: 0; 
`;

const ProjectCardB = ({ title, description, link, imageSrc }) => {
  return (
    <StyledColumn sm={2} md={4} lg={4} >
    <ClickableTile
      className="project-card-b"
      href={link}
    >
      <div className="project-card-b__content">
        <h3>{title}</h3>
        <p>{description}</p>
      </div>
      <div className="project-card-b__footer">
        <ArrowRight size={16} />
      </div>
      <div className="project-card-b__image-container">
        <img src={imageSrc} alt={title} className="project-card-b__image" />
      </div>
    </ClickableTile>
    </StyledColumn>
  );
};

export default ProjectCardB;

================
File: src/components/ProjectCard/ProjectCardB.scss
================
@use '@carbon/react/scss/theme' as *;
@use '@carbon/react/scss/spacing' as *;
@use '@carbon/react/scss/type' as *;

.project-card-b {
  width: 100%;
  display: flex;
  flex-direction: column;
  margin: -1px !important;
  padding: 0 !important; 
  background-color: $layer-02 !important;
  border: 1px solid $border-subtle-02 !important;

  &:hover {
    background-color: $layer-01 !important;
  }

  &__content {
    padding: $spacing-05;
    flex-grow: 1;

    h3 {
      @include type-style('productive-heading-03');
      margin-bottom: $spacing-03;
    }

    p {
      @include type-style('body-long-01');
    }
  }

  &__footer {
    padding: $spacing-05;
    display: flex;
    color: $link-primary;
    justify-content: flex-start;
  }

  &__image-container {
    height: 0;
    padding-bottom: 50%; 
    position: relative;
    overflow: hidden;
  }

  &__image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

================
File: src/components/ProjectCard/ProjectCardC.jsx
================
import React from 'react';
import { Column, AspectRatio, Tag, Button } from '@carbon/react';
import { ArrowRight } from '@carbon/icons-react';
import './ProjectCardC.scss';

const ProjectCardC = ({ type, title, description, imageSrc, link, tags }) => {
  return (
    <Column sm={4} md={8} lg={16} className="project-card-c">
        <div className="project-card-c__content">

          <div className="project-card-c__text">
            <div>
            <h3>{type}</h3>
            <h2>{title}</h2>

            {Array.isArray(tags) && tags.length > 0 && (
              <div className="project-card-c__tags">
                {tags.map((tag, index) => (
                  <Tag key={index} type="blue" size="md">
                    {tag}
                  </Tag>
                ))}
              </div>
            )}

            <p>{description}</p>
            </div>
            <Button 
            className='project-card-c__btn'
            href={link} 
            renderIcon={ArrowRight}
            iconDescription="View Case Study">
              View Case Study
            </Button>
          </div>

          <div className="project-card-c__image-container">
            <Column lg={8} md={8} sm={4}>
              <img src={imageSrc} alt={title} className="project-card-c__image" />
            </Column>
          </div>

        </div>

    </Column>
  );
};

export default ProjectCardC;

================
File: src/components/ProjectCard/ProjectCardC.scss
================
@use '@carbon/react/scss/theme' as *;
@use '@carbon/react/scss/spacing' as *;
@use '@carbon/react/scss/type' as *;
@use '@carbon/react/scss/breakpoint' as *;

.project-card-c {
  margin-bottom: $spacing-07;

  &__link {
    display: block;
    text-decoration: none;
    color: inherit;
    height: 100%;
  }

  &__content {
    display: flex;
    flex-direction: row;
    height: 100%;
    background-color: $layer-01;
    justify-content: space-between;
  }
  
  &__image-container {
    width: 50%;
  }

  &__image {
    width: 100%;
    height: 100%;
    object-fit:cover;
  }

  &__text {
    width: 45%;
    padding: $spacing-05;
    // margin-right: $spacing-05;
    display: flex;
    flex-direction: column;
    justify-content: space-between;

    h2 {
      @include type-style('productive-heading-06');
      margin-bottom: $spacing-03;
    }

    h3 {
      @include type-style('body-02');
      color: $text-secondary;
      margin: $spacing-03 0;
    }

    p {
      @include type-style('body-compact-02');
      margin: $spacing-05 0;
    }
  }

  &__tags {
    display: flex;
    flex-wrap: wrap;
    gap: $spacing-03;
    margin-bottom: $spacing-05;
  }

  &__btn {
    align-self: flex-start;
    align-items: end;
  }

  &__view {
    @include type-style('body-short-02');
    display: flex;
    align-items: center;
    color: $link-primary;
    margin-top: auto;

    svg {
      margin-left: $spacing-03;
    }
  }
}

@include breakpoint(md) {
  .project-card-c {
    &__content {
      flex-direction: row;
    }

    &__image-container {
      width: 50%;
    }

    &__text {
      width: 45%;
    }
  }
}

@include breakpoint(sm) {
  .project-card-c {
    &__content {
      // flex-direction: column;
    }

    &__image-container {
      width: 100%;
    }

    &__text {
      width: 100%;
    }
  }
}

================
File: src/components/ProjectCard/ProjectCardD.jsx
================
import React from 'react';
import { Column, Tag } from '@carbon/react';
import { ArrowRight } from '@carbon/icons-react';
import './ProjectCardD.scss';
import { AspectRatio } from 'carbon-components-react';

const ProjectCardD = ({ title, description, imageSrc, link, tags }) => {
  return (
    <Column sm={4} md={4} lg={8} className="project-card">
      <a href={link} className="project-card__link">
        <div className="project-card__content">
          <div className="project-card__text">
            <h3>{title}</h3>
            <p>{description}</p>
            {Array.isArray(tags) && tags.length > 0 && (
              <div className="project-card__tags">
                {tags.map((tag, index) => (
                  <Tag key={index} type="blue" size="md">
                    {tag}
                  </Tag>
                ))}
              </div>
            )}
            <div className="project-card__view">
              <ArrowRight size={16} />
            </div>
          </div>
          {/* <div className="project-card__image-container"> */}
            <AspectRatio ratio="1x1" className="project-card__image-container_d" >
              <img src={imageSrc} alt={title} className="project-card__image" />
            </AspectRatio>
          {/* </div> */}

        </div>
      </a>
    </Column>
  );
};

ProjectCardD.defaultProps = {
  tags: [],
};

export default ProjectCardD;

================
File: src/components/ProjectCard/ProjectCardD.scss
================
@use '@carbon/react/scss/theme' as *;
@use '@carbon/react/scss/spacing' as *;
@use '@carbon/react/scss/type' as *;
@use '@carbon/react/scss/breakpoint' as *;

.project-card {
  margin-bottom: $spacing-07;

  &__link {
    display: block;
    text-decoration: none;
    color: inherit;
    height: 100%;
  }


  &__content {
    display: flex;
    height: 100%;
    background-color: $layer-01;
    position: relative;
    overflow: hidden;
    justify-content: space-between;
    
    &:hover{
      background-color: $layer-hover-01;
    }
  }
  
  &__text {
    padding: $spacing-05;
    display: flex;
    flex-direction: column;
    // width: 41.66%;

    h3 {
      @include type-style('productive-heading-03');
      margin-bottom: $spacing-03;
    }

    p {
      @include type-style('body-long-01');
      margin-bottom: $spacing-05;
      text-wrap: wrap;
    }
  }

  &__tags {
    display: flex;
    flex-wrap: wrap;
    gap: $spacing-03;
    margin-bottom: $spacing-05;
  }

  &__view {
    @include type-style('body-short-02');
    display: flex;
    align-items: center;
    color: $link-primary;
    margin-top: auto;

    svg {
      margin-left: $spacing-03;
    }
  }

  &__image-container_d {
    width: 50%; 
    position: absolute;
    right: 0;
    top: 0;
    bottom: 0;
  }

  &__image {
    width: 100%;
    height: 100%;
    object-fit: cover !important;
  }

  &__icon {
    position: absolute;
    left: $spacing-05;
    bottom: $spacing-05;
    width: 16px; 
    height: 16px; 
  }
}

================
File: src/components/CapabilitiesTable.jsx
================
import React from 'react';
import {
  StructuredListWrapper,
  StructuredListHead,
  StructuredListBody,
  StructuredListRow,
  StructuredListCell,
  Grid
} from '@carbon/react';
import { CircleDash } from '@carbon/icons-react';
import './CapabilitiesTable.scss';
import capabilitiesIcon from '../assets/img/experiences.png'
import { Column } from 'carbon-components-react';

const Capabilities = () => {
  const capabilities = [
    { design: 'UX Design', tech: 'HTML', marketing: 'Brand VI', projectManagement: 'User Research', language: 'English' },
    { design: 'Graphic Design', tech: 'CSS', marketing: 'Campaign Planing', projectManagement: 'Market Research', language: 'Mandarin' },
    { design: 'Illustration', tech: 'JavaScript', marketing: 'Campaign Execution', projectManagement: 'Budget Tracking', language: 'Cantonese' },
    { design: 'Video Editing', tech: 'React', marketing: 'PR writing', projectManagement: 'Business Model', language: '' },
    { design: '3D Modelling', tech: 'Prompt Engineering', marketing: 'SEO', projectManagement: 'Cross-functional Collaboration', language: '' },
  ];

  return (
    <Grid className="capabilities-section">
      <Column lg={16} md={8} sm={4} className='capabilities-left'>
        <h1>Capabilities</h1>
        
      </Column>

      <Column lg={16} md={8} sm={4} className='capabilities-right'>
      <img src={capabilitiesIcon} alt='icon represent integration and universal' className='capabilities-img' />
      <Column lg={12} md={8} sm={4} className='capabilities-table'>
        <StructuredListWrapper aria-label="Capabilities list">
          <StructuredListHead>
            <StructuredListRow head>
              <StructuredListCell head>Design</StructuredListCell>
              <StructuredListCell head>Tech</StructuredListCell>
              <StructuredListCell head>Marketing</StructuredListCell>
              <StructuredListCell head>Project Management</StructuredListCell>
              <StructuredListCell head>Language</StructuredListCell>
            </StructuredListRow>
          </StructuredListHead>
          <StructuredListBody>
            {capabilities.map((capability, index) => (
              <StructuredListRow key={index}>
                <StructuredListCell>{capability.design}</StructuredListCell>
                <StructuredListCell>{capability.tech}</StructuredListCell>
                <StructuredListCell>{capability.marketing}</StructuredListCell>
                <StructuredListCell>{capability.projectManagement}</StructuredListCell>
                <StructuredListCell>{capability.language}</StructuredListCell>
              </StructuredListRow>
            ))}
          </StructuredListBody>
        </StructuredListWrapper>
        </Column>
      </Column>
    </Grid>
  );
};

export default Capabilities;

================
File: src/components/CapabilitiesTable.scss
================
@use '@carbon/react/scss/spacing' as *;
@use '@carbon/react/scss/type' as *;
@use '@carbon/react/scss/breakpoint' as *;
@use '@carbon/react/scss/theme' as *;

.capabilities-section {
  padding: $spacing-05 0 $spacing-09 0;

  display: flex;
  align-content: space-between;
  // h2 {
  //   @include type-style('productive-heading-05');
  //   margin-bottom: $spacing-07;
  // }
  .capabilities-left {
    display: flex;
    flex-direction: column;

  }

  .capabilities-right {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
  }
  .capabilities-table {
    justify-self:flex-end;
  }

  .capabilities-img {
    margin-right: $spacing-05;
    width: 10%;
    align-self: flex-end;
  }

  .left-wrapper {
    display: flex;
    flex-direction: column;
  }

    .cds--structured-list {
      flex-grow: 1;
      background-color: $layer-02;
    }

    .cds--structured-list-th {
      @include type-style('heading-01');
    }

    .cds--structured-list-td {
      @include type-style('body-long-01');
    }
}

================
File: src/components/Carousel.jsx
================
import React, { useState, useEffect } from 'react';
import { Grid, Column, Tile, PaginationNav } from '@carbon/react';
import { ArrowLeft, ArrowRight } from '@carbon/icons-react';
import './Carousel.scss';

const journeyItems = [
  {
    title: "What brings me here?",
    description: "Description of what brings me here...",
    image: null
  },
  {
    title: "Title 1",
    description: "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
    image: "/path-to-image-1.jpg"
  },
  {
    title: "Title 2",
    description: "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
    image: "/path-to-image-2.jpg"
  },
  {
    title: "Title 3",
    description: "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
    image: "/path-to-image-3.jpg"
  },
  {
    title: "Title 4",
    description: "Additional journey item description.",
    image: "/path-to-image-4.jpg"
  },
  {
    title: "Title 5",
    description: "Another journey item description.",
    image: "/path-to-image-5.jpg"
  }
];

const Carousel = () => {
  const itemsPerPage = 4;
  const totalItems = journeyItems.length;
  const totalPages = Math.ceil(totalItems / itemsPerPage) + 1;
  
  const [currentPage, setCurrentPage] = useState(1);
  const [displayedItems, setDisplayedItems] = useState([]);

  useEffect(() => {
    const startIndex = (currentPage - 1) * itemsPerPage;
    const endIndex = Math.min(startIndex + itemsPerPage, totalItems);
    setDisplayedItems(journeyItems.slice(startIndex, endIndex));
    console.log(`Current page: ${currentPage}, Showing items ${startIndex + 1} to ${endIndex}`);
  }, [currentPage]);

  const handlePageChange = (page) => {
    console.log(`Changing to page: ${page}`);
    setCurrentPage(page);
  };

  return (
    <section className="journey-section">
      <h1>Journey</h1>
      <Grid narrow className="journey-grid">
        {displayedItems.map((item, index) => (
          <Column sm={4} md={2} lg={4} key={index}>
            <Tile className="journey-tile">
              {item.image && (
                <div className="journey-image">
                  <img src={item.image} alt={item.title} />
                </div>
              )}
              <h3>{item.title}</h3>
              <p>{item.description}</p>
            </Tile>
          </Column>
        ))}
      </Grid>
      <div className="journey-navigation">
        <PaginationNav 
          itemsShown={4}
          totalItems={totalPages}
          page={currentPage-1}
          onChange={handlePageChange}
        />
      </div>
    </section>
  );
};

export default Carousel;

================
File: src/components/Carousel.scss
================
@use '@carbon/react/scss/spacing' as *;
@use '@carbon/react/scss/type' as *;
@use '@carbon/react/scss/breakpoint' as *;
@use '@carbon/react/scss/theme' as *;

.journey-section {
  padding: $spacing-05 0;

  h1 {
    @include type-style('productive-heading-07');
    padding-bottom: $spacing-11;
    margin-left: $spacing-07;
  }

  .journey-grid {
    margin-bottom: $spacing-07;
  }

  .journey-tile {
    height: 100%;
    display: flex;
    flex-direction: column;

    .journey-image {
      width: 100%;
      padding-top: 75%; // 4:3 aspect ratio
      position: relative;
      overflow: hidden;
      margin-bottom: $spacing-05;

      img {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
    }

    h3 {
      @include type-style('productive-heading-03');
      margin-bottom: $spacing-03;
    }

    p {
      @include type-style('body-long-01');
    }
  }

  .journey-navigation {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: $spacing-05;

    .nav-button {
      background: none;
      border: none;
      cursor: pointer;
      padding: $spacing-03;

      &:disabled {
        opacity: 0.5;
        cursor: not-allowed;
      }

      &:hover:not(:disabled) {
        background-color: $link-primary;
      }
    }
  }
}

================
File: src/components/Footer.jsx
================
import React from 'react';
import { Grid, Column } from '@carbon/react';
import { LogoLinkedin, Email, LogoGithub } from '@carbon/icons-react';
import './Footer.scss';
import logo from '../assets/img/logo_white.svg'

const Footer = () => {
  
  return (
    <footer className="custom-footer">
      <Grid className="custom-grid" narrow>
        <Column lg={2} md={2} sm={2}>
          <div>
            <img className="logo" src={logo} alt='Gracie logo' height={100}/>
          </div>
        </Column>
        <Column lg={10} md={4} sm={2}>
          <nav>
            <ul>
              <li><a href="/about">About</a></li>
              <li><a href="/work">Work</a></li>
              <li><a href="/gallery">Gallery</a></li>
            </ul>
          </nav>
        </Column>
        <Column lg={4} md={2} sm={4}>
          <div className="social-icons">
            <a href="https://www.linkedin.com/in/gracie-guan" target="_blank" rel="noopener noreferrer">
              <LogoLinkedin size={20} />
            </a>
            <a href="mailto:gracie.yy.guan@gmail.com">
              <Email size={20} />
            </a>
            <a href="https://github.com/Gracie-Guan/">
              <LogoGithub size={20} />
            </a>
          </div>
          <p className="copyright">
            Website designed and developed with<br />
            IBM Carbon Design System.<br />
            ©2024 Gracie Guan. All rights reserved.
          </p>
        </Column>
      </Grid>
    </footer>
  );
};

export default Footer;

================
File: src/components/Footer.scss
================
@use '@carbon/react/scss/theme' as *;
@use '@carbon/react/scss/spacing' as *;
@use '@carbon/react/scss/breakpoint' as *;
@use '@carbon/react/scss/type' as *;

.custom-footer {
  background-color: $background-inverse;
  color: $text-on-color;
  padding: $spacing-07 0;
  margin-top: $spacing-09;

  .custom-grid {
    max-width: 1584px; // Carbon's max width
    margin: 0 32;
    padding: 0 $spacing-07;

    @include breakpoint(sm) {
      padding: 0 $spacing-05;
    }
  }

  .logo {
    height: 100px;
    width: auto;
    // margin-top: 32px;
    margin-left: 16px;
  }

  nav {
    ul {
      list-style-type: none;
      padding: 0;
      margin-left: 128px;
      margin-top: 32px;
      display: flex;
      justify-content: center;

      li {
        margin-right: $spacing-07;

        a {
          color: $text-on-color;
          text-decoration: none;

          &:hover {
            text-decoration: underline;
          }
        }
      }
    }
  }

  .social-icons {
    display: flex;
    justify-content: flex-end;
    margin-top: 32px;
    margin-bottom: 32px;

    a {
      color: $text-on-color;
      margin-left: $spacing-07;
    }
  }

  .copyright {
    margin-top: $spacing-05;
    text-align: right;
    font-size: 16;
    @include type-style('label-01');
  }
}

================
File: src/components/Header.jsx
================
import React from 'react';

import {
  Header,
  HeaderContainer,
  HeaderName,
  HeaderNavigation,
  HeaderMenuItem,
  HeaderGlobalBar,
  HeaderGlobalAction,
  SkipToContent,
  HeaderSideNavItems,
  HeaderMenuButton,
  SideNav, SideNavItems,
} from '@carbon/react';
import { LogoLinkedin, Email, LogoGithub } from '@carbon/react/icons';
import { Link as RouterLink } from 'react-router-dom';

function MyHeader() {

    const handleLinkedInClick = () => {
      window.open('https://www.linkedin.com/in/gracie-guan/', '_blank');
    };
  
    const handleEmailClick = () => {
      window.location.href = 'mailto:gracie.yy.guan@gmail.com';
    };

    const handleGithubClick = () => {
      window.open('https://www.linkedin.com/in/gracie-guan/', '_blank');
    }

  return (<HeaderContainer render={({
    isSideNavExpanded,
    onClickSideNavExpand
  }) => <>
          <Header aria-label="Gracie Guan Portfolio">
            <SkipToContent />
            <HeaderMenuButton aria-label={isSideNavExpanded ? 'Close menu' : 'Open menu'} onClick={onClickSideNavExpand} isActive={isSideNavExpanded} aria-expanded={isSideNavExpanded} />
            <HeaderName href="/" prefix={null}>
              Gracie Guan
            </HeaderName>
            <HeaderNavigation aria-label="Gracie Guan Portfolio">
              <HeaderMenuItem href="/about">About</HeaderMenuItem>
              <HeaderMenuItem href="/work">Work</HeaderMenuItem>
              <HeaderMenuItem href="/gallery">Gallery</HeaderMenuItem>
            </HeaderNavigation>
            <HeaderGlobalBar>
              <HeaderGlobalAction aria-label="Linkedin" onClick={handleLinkedInClick}>
                <LogoLinkedin size={20} />
              </HeaderGlobalAction>
              <HeaderGlobalAction aria-label="Email" onClick={handleEmailClick}>
                <Email size={20} />
              </HeaderGlobalAction>
              <HeaderGlobalAction aria-label="Github" onClick={handleGithubClick}>
                <LogoGithub size={20} />
              </HeaderGlobalAction>
            </HeaderGlobalBar>
            <SideNav aria-label="Side navigation" expanded={isSideNavExpanded} isPersistent={false} onSideNavBlur={onClickSideNavExpand}>
              <SideNavItems>
                <HeaderSideNavItems>
                  <HeaderMenuItem href="/about">About</HeaderMenuItem>
                  <HeaderMenuItem href="/work">Work</HeaderMenuItem>
                  <HeaderMenuItem href="/gallery">Gallery</HeaderMenuItem>
                </HeaderSideNavItems>
              </SideNavItems>
            </SideNav>
          </Header>
        </>} />
  );
}

export default MyHeader;

================
File: src/components/Overview.jsx
================
import React from 'react';
import { Tag, Grid, Column } from '@carbon/react';
import Group from '../assets/img/Group.png';
import Role from '../assets/img/Multitask.png';
import Time from '../assets/img/Time-lapse.png';
import Growth from '../assets/img/Productivity.png';
import './Overview.scss';

const ProjectOverview = ({ title, subtitle, tags, role, timeframe, teamSize, productStage, imageSrc }) => {
  return (
    <div className="project-overview">
      <Grid narrow>
        <Column lg={16} md={8} sm={4}>
          <h1 className='title'>{title}</h1>
        </Column>
        <Column lg={8} md={4} sm={4} className="content-column">
          <div className="upper-content">
            <h2 className='subtitle'>{subtitle}</h2>
            <div className="project-tags">
              {tags.map((tag, index) => (
                <Tag key={index} type="blue" size='md'>
                  {tag}
                </Tag>
              ))}
            </div>
          </div>
          
          <Grid narrow className="project-details">
            <Column sm={2} md={2} lg={4}>
              <div className="detail-item">
                <img src={Role} alt='Role in the project' className='overview-icon'/>
                <div>
                  <h3>Role</h3>
                  <p>{role}</p>
                </div>
              </div>
            </Column>
            <Column sm={2} md={2} lg={4}>
              <div className="detail-item">
                <img src={Time} alt='time frame for the project' className='overview-icon'/>
                <div>
                  <h3>Time frame</h3>
                  <p>{timeframe}</p>
                </div>
              </div>
            </Column>
            <Column sm={2} md={2} lg={4}>
              <div className="detail-item">
                <img src={Group} alt='team size' className='overview-icon' />
                <div>
                  <h3>Team size</h3>
                  <p>{teamSize}</p>
                </div>
              </div>
            </Column>
            <Column sm={2} md={2} lg={4}>
              <div className="detail-item">
                <img src={Growth} alt='product stage' className='overview-icon'/>
                <div>
                  <h3>Product Stage</h3>
                  <p>{productStage}</p>
                </div>
              </div>
            </Column>
          </Grid>
        </Column>
        
        <Column lg={8} md={4} sm={4} className="image-column">
          <img src={imageSrc} alt="Project screenshot" className="project-image" />
        </Column>
      </Grid>
    </div>
  );
};

export default ProjectOverview;

================
File: src/components/Overview.scss
================
@use '@carbon/react/scss/theme' as *;
@use '@carbon/react/scss/spacing' as *;
@use '@carbon/react/scss/breakpoint' as *;
@use '@carbon/react/scss/type' as *;

.project-overview {
  padding: $spacing-05 0;
  margin-bottom: $spacing-07;

  .title {
    @include type-style('productive-heading-06');
    color: $link-primary;
    // margin-bottom: $spacing-03;
  }

  .content-column {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%;
  }

  .upper-content {
    flex-grow: 1;
  }

  .subtitle {
    @include type-style('productive-heading-04');
    margin-bottom: $spacing-05;
  }

  .project-tags {
    margin-bottom: $spacing-07;

    .cds--tag {
      margin-right: $spacing-03;
      margin-bottom: $spacing-03;
    }
  }

  .project-details {
    margin-top: auto; 
    justify-items: start;
    align-items: center;
  }

  .detail-item {
    display: flex;
    align-items: center;
    margin: $spacing-05;

    .overview-icon {
      width: 48px;
      height: 48px;
      margin-right: $spacing-05;
      flex-shrink: 0;
    }

    div {
      flex-grow: 1;
    }

    h3 {
      @include type-style('heading-01');
      margin-bottom: $spacing-02;
    }

    p {
      @include type-style('body-short-01');
    }
  }

  .image-column {
    display: flex;
    align-items: flex-start;
  }

  .project-image {
    width: 100%;
    height: auto;
    object-fit: cover;
  }

  @include breakpoint(md) {
    .content-column,
    .image-column {
      height: 100%;
    }
  }

  @include breakpoint(lg) {
    .content-column,
    .image-column {
      height: 100%;
    }
  }
}

================
File: src/components/SidebarNavigation.jsx
================
import React from 'react';
import './SidebarNavigation.scss';

const SidebarNavigation = ({ items, currentSection, onItemClick }) => {
  return (
    <nav className="bx--tableofcontents__desktop">
      <ul className="bx--sub-content-left">
        {items.map((item, index) => (
          <li
            key={index}
            className={`bx--tableofcontents__desktop__item ${
              currentSection === item.id ? 'bx--tableofcontents__desktop__item--active' : ''
            }`}
          >
            <button
              className="bx--tableofcontents__desktop__item-link"
              onClick={() => onItemClick(item.id)}
              data-target={item.dataTarget}
            >
              {item.title}
            </button>
          </li>
        ))}
      </ul>
    </nav>
  );
};

export default SidebarNavigation;

================
File: src/components/SidebarNavigation.scss
================
.bx--tableofcontents__desktop {
  position: sticky;
  top: 48px;
  max-height: calc(100vh - 48px);
  overflow-y: auto;

  .bx--sub-content-left {
    list-style-type: none;
    padding: 0;
    margin: 0;
  }

  &__item {
    margin-bottom: 8px;

    &--active {
      .bx--tableofcontents__desktop__item-link {
        font-weight: 600;
        color: #0f62fe;
        border-left: 2px solid #0f62fe;
      }
    }

    &-link {
      background: none;
      border: none;
      text-align: left;
      width: 100%;
      padding: 8px 16px;
      font-size: 14px;
      color: #525252;
      cursor: pointer;
      transition: color 0.11s;

      &:hover {
        color: #0f62fe; 
      }
    }
  }
}

================
File: src/pages/CaseStudy/CaseStudy.jsx
================
import React, { useState, useEffect } from 'react';
import { Grid, Column, Content } from '@carbon/react';
import ProjectOverview from '../../components/Overview';
import MultimediaContent from './MultimediaContent';
import SidebarNavigation from '../../components/SidebarNavigation';
import './CaseStudy.scss';

const CaseStudy = ({ projectData, sections }) => {
  const [currentSection, setCurrentSection] = useState(sections[0]?.id);

  const handleNavigation = (sectionId) => {
    setCurrentSection(sectionId);
    const element = document.getElementById(sectionId);
    if (element) {
      element.scrollIntoView({ behavior: 'smooth' });
    }
  };

  useEffect(() => {
    const handleScroll = () => {
      const sectionElements = sections.map(section => 
        document.getElementById(section.id)
      );
      
      const currentSectionIndex = sectionElements.findIndex(element => {
        if (element) {
          const rect = element.getBoundingClientRect();
          return rect.top <= 100 && rect.bottom > 100;
        }
        return false;
      });

      if (currentSectionIndex !== -1) {
        setCurrentSection(sections[currentSectionIndex].id);
      }
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, [sections]);

  const renderContent = (content) => {
    const contentArray = Array.isArray(content) ? content : [content];

    return contentArray.map((item, itemIndex) => {
      if (typeof item === 'string') {
        return <p key={itemIndex}>{item}</p>;
      } else if (item && item.type === 'multimedia') {
        return (
          <MultimediaContent
            key={itemIndex}
            type={item.mediaType}
            src={item.src}
            alt={item.alt}
            caption={item.caption}
          />
        );
      }
      return null;
    });
  };

  return (
    <Content>
      <ProjectOverview {...projectData} />
      
      <Grid narrow>
        <Column lg={4} md={2} sm={4} className="sidebar-column">
          <SidebarNavigation 
            items={sections.map(section => ({
              id: section.id,
              title: section.title,
              dataTarget: section.id
            }))}
            currentSection={currentSection}
            onItemClick={handleNavigation}
          />
        </Column>
        
        <Column lg={10} md={6} sm={4} className="content-column">
          <main className="case-study-content">
            {sections.map((section, index) => (
              <React.Fragment key={index}>
                <section id={section.id}>
                  <h2>{section.title}</h2>
                  {renderContent(section.content)}
                </section>
                {index < sections.length - 1 && (
                  <div className="section-divider"></div>
                )}
              </React.Fragment>
            ))}
          </main>
        </Column>
      </Grid>
    </Content>
  );
};

export default CaseStudy;

================
File: src/pages/CaseStudy/CaseStudy.scss
================
@use '@carbon/react/scss/theme' as *;
@use '@carbon/react/scss/spacing' as *;
@use '@carbon/react/scss/breakpoint' as *;
@use '@carbon/react/scss/type' as *;

.case-study-content {
  padding: $spacing-07 0;

  section {
    margin-bottom: $spacing-07;

    h2 {
      @include type-style('productive-heading-04');
      margin-bottom: $spacing-06;
    }

    p {
      @include type-style('body-long-02');
      margin-bottom: $spacing-05;
    }
  }

  .section-divider {
    width: 100%;
    height: 1px;
    background-color: $border-subtle-01;
    margin: $spacing-07 0;
  }
}

.sidebar-column {
  position: sticky;
  top: $spacing-07;
  height: fit-content;
}

.content-column {
  @include breakpoint(md) {
    margin-left: $spacing-07;
  }
}

================
File: src/pages/CaseStudy/CaseStudy01.jsx
================
import React from 'react';
import { Column, Breadcrumb, BreadcrumbItem } from '@carbon/react';
import CaseStudy from './CaseStudy'; 
import nomnomUi from '../../assets/img/nomnom_ui.png';
// import userResearchImage from '../assets/img/user-research.jpg';
// import appDemoVideo from '../assets/video/app-demo.mp4';

const NOMNOMCaseStudy = () => {
  const projectData = {
    title: "NOMNOM Mobile App",
    subtitle: "How We Unlock the Value of Restaurant Menus",
    tags: ["UX Design", "Frontend", "React Native", "Google Cloud", "Gemini AI"],
    role: "Project Manager, Product Designer, Frontend Developer",
    timeframe: "2 Months",
    teamSize: "6 people",
    productStage: "0 -> 1",
    imageSrc: nomnomUi,
  };

  const sections = [
    {
      id: "overview",
      title: "Project Overview",
      content: [
        "NOMNOM is a mobile application that revolutionizes restaurant menu discovery. It addresses common frustrations in finding accurate food information by converting user-uploaded menu photos into accessible, text-based formats. The app enables users to search for specific dishes across multiple restaurants, shifting from a restaurant-centric to a dish-centric approach.",
        {
          type: 'multimedia',
          mediaType: 'image',
          src: nomnomUi,
          alt: 'NOMNOM app interface',
          caption: 'NOMNOM app main screen showing various restaurant menus'
        },
        "Developed as a master's degree project, I led a cross-functional and multi-cultural team of six to create this app from concept to MVP in a 2-month timeframe with zero budget. My role encompassed project management, product design, and frontend development."
      ]
    },
    {
      id: "problem",
      title: "Problem Statement",
      content: [
        "Existing platforms like Google Maps, TripAdvisor, and OpenTable often provide outdated or incomplete menu information for restaurants. This is primarily due to their reliance on restaurant staff to update digital information, a task often overlooked in busy restaurant operations.",
        "Users frequently encounter unclear, outdated menu pictures or broken website links when trying to access menu details. This gap in accurate, accessible menu information creates frustration for diners and missed opportunities for restaurants.",
        {
          type: 'multimedia',
          mediaType: 'image',
          src: nomnomUi,
          alt: 'User research process',
          caption: 'Conducting user interviews to understand pain points in menu discovery'
        }
      ]
    },
    {
      id: "solution",
      title: "Our Solution",
      content: [
        "We developed an AI-powered system to convert user-uploaded menu photos into accessible, text-based formats. Key features of our solution include:",
        "1. Image-to-Text Conversion: Utilizing Google Cloud Vision API and Gemini AI to accurately extract text from menu images.",
        "2. Dish-Centric Search: Allowing users to search for specific dishes across multiple restaurants in their area.",
        "3. User-Generated Content: Encouraging users to upload and update menu information, creating a constantly refreshed database.",
        "4. Restaurant Collaboration: Providing tools for restaurant owners to verify and update their menu information directly.",
        {
          type: 'text',
          alt: 'NOMNOM app demo',
          caption: 'A walkthrough of the NOMNOM apps key features'
        }
      ]
    },
    {
      id: "process",
      title: "Design and Development Process",
      content: [
        "Our process followed a rapid prototyping and iterative development approach:",
        "1. User Research: Conducted surveys and interviews to understand user priorities and pain points.",
        "2. Competitor Analysis: Analyzed existing solutions to identify gaps and opportunities.",
        "3. Ideation and Prototyping: Used Figma to create low and high-fidelity prototypes.",
        "4. Technology Stack Selection: Chose React Native for cross-platform development, Google Cloud for backend services, and Gemini AI for advanced text processing.",
        "5. Agile Development: Implemented 1-week sprint cycles with daily stand-ups and weekly retrospectives.",
        "6. User Testing: Conducted regular usability tests with potential users to refine the UI/UX."
      ]
    },
    {
      id: "challenges",
      title: "Challenges and Learnings",
      content: [
        "Throughout the project, we faced several challenges:",
        "1. AI Accuracy: Ensuring high accuracy in menu text extraction, especially for handwritten or stylized menus.",
        "2. Data Privacy: Implementing robust measures to protect user data and comply with privacy regulations.",
        "3. User Engagement: Designing a reward system to encourage users to contribute menu updates.",
        "4. Cross-Platform Consistency: Ensuring a consistent user experience across iOS and Android platforms.",
        "These challenges provided valuable learning experiences in AI implementation, data handling, and cross-platform development."
      ]
    },
    {
      id: "outcome",
      title: "Outcome and Future Plans",
      content: [
        "The NOMNOM app was successfully launched as an MVP, receiving positive feedback from initial users. Key outcomes include:",
        "• 90% accuracy in menu text extraction",
        "• Average user rating of 4.7/5 stars in beta testing",
        "• 30% faster menu discovery compared to traditional methods",
        "Future plans include:",
        "1. Expanding the AI capabilities to include dish recognition from images",
        "2. Implementing a recommendation system based on user preferences",
        "3. Developing partnerships with local restaurants for exclusive offers",
        "This project not only delivered a useful product but also showcased our team's ability to innovate and execute under constraints, setting a foundation for future enhancements and scalability."
      ]
    }
  ];

  return (
    <div>
         <Column sm={4} md={8} lg={16}>
          <Breadcrumb noTrailingSlash aria-label="Page navigation">
            <BreadcrumbItem>
              <a href="/">Home</a>
            </BreadcrumbItem>
            <BreadcrumbItem>
              <a href="/work">Work</a>
            </BreadcrumbItem>
            <BreadcrumbItem isCurrentPage>NOMNOM</BreadcrumbItem>
          </Breadcrumb>
        </Column>
    <CaseStudy projectData={projectData} sections={sections} />
    </div>);
};

export default NOMNOMCaseStudy;

================
File: src/pages/CaseStudy/CaseStudy02.jsx
================
import React from 'react'

function CaseStudy02() {
  return (
    <div className="tcdrenters-page">CaseStudy02

    
    </div>
  )
}

export default CaseStudy02

================
File: src/pages/CaseStudy/MultimediaContent.jsx
================
import React from 'react';
import { AspectRatio } from '@carbon/react';

const MultimediaContent = ({ type, src, alt, caption }) => {
  const renderContent = () => {
    switch (type) {
      case 'image':
        return (
          <img 
            src={src} 
            alt={alt} 
            style={{ width: '100%', height: 'auto' }}
            onError={(e) => {
              console.error(`Error loading image: ${src}`);
              e.target.src = '/path/to/fallback-image.jpg';
            }}
          />
        );
      case 'video':
        return (
          <AspectRatio ratio="16x9">
            <video controls width="100%">
              <source src={src} type="video/mp4" />
              Your browser does not support the video tag.
            </video>
          </AspectRatio>
        );
      case 'youtube':
        return (
          <AspectRatio ratio="16x9">
            <iframe
              width="100%"
              height="100%"
              src={`https://www.youtube.com/embed/${src}`}
              frameBorder="0"
              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
              allowFullScreen
              title={alt}
            ></iframe>
          </AspectRatio>
        );
      default:
        return null;
    }
  };

  return (
    <div className="multimedia-content">
      {renderContent()}
      {caption && <p className="multimedia-caption">{caption}</p>}
    </div>
  );
};

export default MultimediaContent;

================
File: src/pages/About.jsx
================
import React from 'react';
import { Grid, Column, Breadcrumb, BreadcrumbItem, Link } from '@carbon/react';
import headshot from '../assets/img/gracie_headshot.jpg';
import './About.scss';
import Carousel from '../components/Carousel';
import Capabilities from '../components/CapabilitiesTable';
import { ArrowRight } from '@carbon/icons-react';
import cv from '../assets/Gracie Guan_Resume.pdf'

function About() {
  return (
    <div className='about-page'>
      <Breadcrumb noTrailingSlash aria-label="Page navigation" className='about-breadcrumb'>
        <BreadcrumbItem>
          <a href="/">Home</a>
        </BreadcrumbItem>
        <BreadcrumbItem isCurrentPage>About</BreadcrumbItem>
      </Breadcrumb>

      <section className="intro-section">
        <Grid>
          <Column lg={4} md={4} sm={4}>
            <div className="intro-image">
              <img src={headshot} alt="Gracie Guan portrait" />
            </div>
          </Column>
          <Column lg={12} md={4} sm={4}>
            <div className="intro-text">
              <div>
              <h1 className="intro-title">
                Hi, I'm<br />
                Gracie Guan
              </h1>
              <Link href={cv} renderIcon={() => <ArrowRight aria-label="Arrow Right" />}>
                Download My CV
              </Link>
              </div>
              <div className="intro-description">
                <div className='text-container'>
                <p>
                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
                  do eiusmod tempor incididunt ut labore et dolore magna
                  aliqua. Ut enim ad minim veniam, quis nostrud exercitation
                  ullamco laboris nisi ut aliquip ex ea commodo consequat.
                </p>
                </div>

                <div className='text-container'>
                <p>
                  Duis aute irure dolor in reprehenderit in voluptate velit esse
                  cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
                  cupidatat non proident, sunt in culpa qui officia deserunt mollit
                  anim id est laborum.
                </p>
                </div>
              </div>
            </div>
          </Column>
        </Grid>
      </section>

      <section className='journey-section'>
        <Carousel />
      </section>

      <section className='capabilities-section'>
        <Capabilities />
      </section>
    </div>
  )
}

export default About;

================
File: src/pages/About.scss
================
@use '@carbon/react/scss/spacing' as *;
@use '@carbon/react/scss/type' as *;
@use '@carbon/react/scss/breakpoint' as *;
@use '@carbon/react/scss/theme' as *;

.about-page {
  // .about-breadcrumb{
  //   margin: $spacing-07;
  // }


  .intro-section {
    padding: $spacing-11 0;
    
    @include breakpoint(sm) {
      padding: $spacing-07 0;
    }

    .intro-image {
      img {
        width: 100%;
        height: auto;
        aspect-ratio: 3 / 4;
        object-fit: cover;
      }
    }

    .intro-text {
      @include breakpoint(lg) {
        padding-left: $spacing-07;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        height: 100%;
      }

      .intro-title {
        @include type-style('productive-heading-07');
        margin-bottom: $spacing-05;
      }

      .intro-description {
        display: flex;
        flex-direction: row;
        gap: $spacing-07;

        // @include breakpoint(sm) {
        //   flex-direction: column;
        //   gap: $spacing-07;
        // }
      }

      .text-container {
        width: 47.5%;

        // @include breakpoint(sm) {
        //   width: 100%;
        // }

        p {
          @include type-style('body-compact-02');
          margin: 0;
        }
      }
    }
  }
}

================
File: src/pages/Gallery.jsx
================
import React, { useState, useEffect } from 'react';
import { Grid, Column, Content, Button, Breadcrumb, BreadcrumbItem } from '@carbon/react';
import { Add, Close } from '@carbon/icons-react';
import './Gallery.scss';

const sections = [
  { id: '3d-modelling', title: '3D Modelling' },
  { id: 'visual-computing', title: 'Visual Computing' },
  { id: 'illustration', title: 'Illustration' },
  { id: 'photography', title: 'Photography' },
  { id: 'game-design', title: 'Game Design' }
];

function Gallery() {
  const [isMobile, setIsMobile] = useState(window.innerWidth < 672);
  const [isNavOpen, setIsNavOpen] = useState(!isMobile);
  const [activeSection, setActiveSection] = useState(sections[0].id);

  useEffect(() => {
    const handleResize = () => {
      const mobile = window.innerWidth < 672;
      setIsMobile(mobile);
      setIsNavOpen(!mobile);
    };
    window.addEventListener('resize', handleResize);
    return () => window.removeEventListener('resize', handleResize);
  }, []);

  const toggleNav = () => setIsNavOpen(!isNavOpen);

  const scrollToSection = (id) => {
    const element = document.getElementById(id);
    if (element) {
      element.scrollIntoView({ behavior: 'smooth' });
      setActiveSection(id);
    }
    if (isMobile) {
      setIsNavOpen(false);
    }
  };

  return (
    <div className="gallery-page">
      <Grid>
        <Column sm={4} md={8} lg={16}>
          <Breadcrumb noTrailingSlash aria-label="Page navigation">
            <BreadcrumbItem>
              <a href="/">Home</a>
            </BreadcrumbItem>
            <BreadcrumbItem isCurrentPage>Gallery</BreadcrumbItem>
          </Breadcrumb>
        </Column>
      </Grid>
      <Grid className="gallery-content">
        <Column sm={4} md={2} lg={2} className="side-nav-column">
          {isMobile && (
            <Button
              hasIconOnly
              renderIcon={isNavOpen ? Close : Add}
              onClick={toggleNav}
              className="nav-toggle-button"
            />
          )}
          <nav className={`gallery-nav ${isNavOpen ? 'open' : ''}`}>
            <ul className="document-toc-list">
              {sections.map((section) => (
                <li 
                  key={section.id} 
                  className={`document-toc-item ${activeSection === section.id ? 'active' : ''}`}
                >
                  <a 
                    href={`#${section.id}`}
                    className="document-toc-link"
                    onClick={(e) => {
                      e.preventDefault();
                      scrollToSection(section.id);
                    }}
                  >
                    {section.title}
                  </a>
                </li>
              ))}
            </ul>
          </nav>
        </Column>
        <Column sm={4} md={6} lg={14} className="gallery-main-content">
          <Content>
            {sections.map((section) => (
              <section key={section.id} id={section.id}>
                <h2>{section.title}</h2>
                {/* Add your gallery items for each section here */}
              </section>
            ))}
          </Content>
        </Column>
      </Grid>
    </div>
  );
}

export default Gallery;

================
File: src/pages/Gallery.scss
================
@use '@carbon/react/scss/breakpoint' as *;
@use '@carbon/react/scss/spacing' as *;
@use '@carbon/react/scss/theme' as *;

.gallery-page {
  margin-top: $spacing-07;

  .cds--breadcrumb {
    margin-bottom: $spacing-05;
    margin-left: $spacing-13;
  }

  .gallery-content {
    display: flex;
  }

  .side-nav-column {
    position: relative;
  }

  .nav-toggle-button {
    position: fixed;
    top: $spacing-09; // Adjust based on your header height
    left: $spacing-05;
    z-index: 1000;
  }

  .gallery-nav {
    position: fixed;
    top: $spacing-12; // Adjust based on your header height
    left: $spacing-07;
    height: 50vh;
    width: 12.5%; 
    background-color: $layer-02;
    overflow-y: auto;
    transition: transform 0.3s ease;
    z-index: 999;

    @include breakpoint-down(md) {
      transform: translateX(-100%);
      width: 100%;

      &.open {
        transform: translateX(0);
      }
    }

    .document-toc-list {
      list-style: none;
      padding: 0;
      margin: 0;
    }

    .document-toc-item {
      margin: 0;
      padding: 0;
      border-left: 3px solid transparent;
      transition: border-color 0.2s ease;

      &.active {
        border-left-color: $link-primary; 
      }
    }

    .document-toc-link {
      display: block;
      padding: $spacing-04 $spacing-05;
      color: $text-primary;
      text-decoration: none;
      font-size: 0.875rem;
      transition: background-color 0.2s ease, color 0.2s ease;

      &:hover {
        background-color: $layer-01;
        color: $text-primary;
      }
    }

    .document-toc-item.active .document-toc-link {
      color: $text-primary;
      font-weight: 600;
    }
  }

  .gallery-main-content {
    margin-left: 12.5%; 

    @include breakpoint-down(md) {
      margin-left: 0;
    }

    section {
      margin-bottom: $spacing-09;
    }
  }

  @include breakpoint(md) {
    .nav-toggle-button {
      display: none;
    }
  }
}

================
File: src/pages/Home.jsx
================
import React from 'react';
import { Grid, Column, Link, AspectRatio } from '@carbon/react';
import { ArrowRight } from '@carbon/icons-react';
import './Home.scss';
import colorlogo from '../assets/img/colorlogo.png';
import openness from '../assets/img/Open-source.png';
import thinking from '../assets/img/Connect.png';
import agile from '../assets/img/Fast.png';
import collab from '../assets/img/Collaborate-with-teams.png'
import ProjectCardA from '../components/ProjectCard/ProjectCardA';
import ProjectCardB from '../components/ProjectCard/ProjectCardB'
import styled from 'styled-components';

import nomNomImage from '../assets/img/Nomnom-1.png';

import marketResearchImage from '../assets/img/MarketResearch.jpg';
import gallerypic1 from '../assets/img/computer_desk.jpg';
import gallerypic2 from '../assets/img/cystal_ball.jpg';
import gallerypic3 from '../assets/img/3Dmodel.png';
import gallerypic4 from '../assets/img/data_visual.jpg';

const StyledGrid = styled(Grid)`
  --cds-grid-gutter: 0; 
`;

const Home = () => {
  return (
    <div className="home-page">

      {/*  hero section */}
      <section className="intro-section">
        <Grid>
          <Column lg={12} md={6} sm={4}>
            <h1 className="intro-title">
              Connecting the Dots among<br />
              Business, Technology and Design
            </h1>
            <Link href="/about" className="meet-link">
              Meet Gracie Guan <ArrowRight size={20} />
            </Link>
          </Column>
          <Column lg={4} md={2} sm={4} >
            <img className='image' src={colorlogo} alt='gracie logo'/>
          </Column>
        </Grid>
      </section>
      <section className="skills-section">
        <Grid condensed>
          <Column sm={4} md={2} lg={4} className="skill-column">
            <div className='skillWrapper'>
              <div className="skill-content">
                <h3>Empathetic Openness</h3>
                <p>Opening windows to let in fresh ideas</p>
              </div>
              <img className='info-graph' src={openness} alt='openness'/>
            </div>
          </Column>
          <Column sm={4} md={2} lg={4} className="skill-column">
            <div className='skillWrapper'>
              <div className="skill-content">
                <h3>Integrative Thinking</h3>
                <p>Bridging ideas across disciplines to find comprehensive solutions</p>
              </div>
              <img className='info-graph' src={thinking} alt='integrative thinking'/>
              </div>
          </Column>
          <Column sm={4} md={2} lg={4} className="skill-column">
            <div className='skillWrapper'>
              <div className="skill-content">
                <h3>Adaptive Agility</h3>
                <p>Rolling with the changes and picking up new tricks fast</p>
              </div>
              <img className='info-graph' src={agile} alt='adaptive agility'/>
            </div>
          </Column>
          <Column sm={4} md={2} lg={4} className="skill-column">
            <div className='skillWrapper'>
              <div className="skill-content">
                <h3>Collaborative Mindset</h3>
                <p>Teaming up and making sure everyone's voice is heard</p>
              </div>
              <img className='info-graph' src={collab} alt='collaborative mindset'/>
            </div>
          </Column>
        </Grid>
      </section>

        {/*  project section */}
      <section className='des-dev-project'>
        <Grid className='des-header'>
          <Column lg={8} md={4} sm={4}>
            <h1> 
              Design and Development
            </h1>
          </Column>
          <Column lg={8} md={4} sm={4}>
            <p className='body-compact-02'> 
            Blending design and coding is like being a bilingual artist in the digital world. This dual fluency allows me to paint with pixels and sculpt with code, crafting innovative solutions that speak to both form and function. My ability to switch between these languages helps me bridge gaps in diverse teams, turning potential barriers into creative springboards.
            </p>
          </Column>
        </Grid>

        <Grid condensed className='des-cards'>
          <ProjectCardA
            title="NOMNOM"
            description="A mobile application that addresses common frustrations in finding accurate food information by converting user-uploaded menu photos into accessible, text-based formats using AI."
            imageSrc={nomNomImage}
            link="/nomnom"
            tags={['Mobile App']}
          />

          <ProjectCardA
            title="TCD Renters Network"
            description="A centralised website to coordinate campaigns around issues faced by the collective student renter community at Trinity College Dublin."
            imageSrc={nomNomImage}
            link="/tcdrenters"
            tags={['Website']}
          />
        </Grid>
      </section>

      <section className='mkt-project'>
        <Grid className='mkt-header'>
          <Column lg={8} md={4} sm={4}>
            <h1> 
              Marketing
            </h1>
          </Column>
          <Column lg={8} md={4} sm={4}>
            <p className='body-compact-02'> 
            My years in marketing have sharpened my eye for solutions that match business goals. It's like walking a tightrope, carefully balancing customer wants on one side and company needs on the other. This balance is key to my approach. My projects show how I tackle real-world business challenges.
            </p>
          </Column>
        </Grid>

        <StyledGrid condensed className='des-cards'>
          <ProjectCardB
            title="Market Research for R&D"
            description="market research for electric scooter products, conducted in-depth user and distributor interviews, and formulated firsthand market insight and analysis for the R&D department."
            link="/projects/market-research"
            imageSrc={marketResearchImage}
          />

          <ProjectCardB
            title="Product Launch"
            description="market research for electric scooter products, conducted in-depth user and distributor interviews, and formulated firsthand market insight and analysis for the R&D department."
            link="/projects/market-research"
            imageSrc={marketResearchImage}
          />

          <ProjectCardB
            title="Process Improvement SOP"
            description="market research for electric scooter products, conducted in-depth user and distributor interviews, and formulated firsthand market insight and analysis for the R&D department."
            link="/projects/market-research"
            imageSrc={marketResearchImage}
          />

          <ProjectCardB
            title="Integrated Marketing Campaign"
            description="market research for electric scooter products, conducted in-depth user and distributor interviews, and formulated firsthand market insight and analysis for the R&D department."
            link="/projects/market-research"
            imageSrc={marketResearchImage}
          />
        </StyledGrid>
      </section>

      {/*  gallery section */}
      <section className='gallery-section'>
        <Grid className='gallery-text'>
          <Column lg={8} md={6} sm={4} className='g-text'>
            <h1 className='g-headline'>Gallery</h1>
            <p>
              Welcome to my visual playground - Here, pixels meet polygons, and code brings imagination to life. From smooth 3D shapes to eye-catching computer graphics, each piece shows how creativity and code can work hand in hand.
            </p>
          </Column>
          <Column lg={8} md={6} sm={4} className='g-link'>
            <Link href="/gallery" renderIcon={ArrowRight}>
              View More
            </Link>
          </Column>
        </Grid>

        <div className='gallery-grid'>
          <div className="gallery-item gallery-item-large">
            <img src={gallerypic1} alt="Gallery item 1" />
          </div>
          <div className="gallery-item gallery-item-small">
            <img src={gallerypic2} alt="Gallery item 2" />
          </div>
          <div className="gallery-item gallery-item-small">
            <img src={gallerypic3} alt="Gallery item 3" />
          </div>
          <div className="gallery-item gallery-item-large">
            <img src={gallerypic4} alt="Gallery item 4" />
          </div>
        </div>
      </section>

    </div>
  );
};

export default Home;

================
File: src/pages/Home.scss
================
@use '@carbon/react/scss/theme' as *;
@use '@carbon/react/scss/spacing' as *;
@use '@carbon/react/scss/breakpoint' as *;
@use '@carbon/react/scss/type' as *;

//hero section
.home-page {
  .intro-section {
    padding: $spacing-09 0;

    @include breakpoint(sm) {
      padding: $spacing-07 0;
    }

    .intro-title {
      @include type-style('productive-heading-07');
      margin-bottom: $spacing-06;
    }

    .meet-link {
      @include type-style('body-long-02');
      display: flex;
      align-items: center;
      color: $link-primary;
      text-decoration: none;

      svg {
        margin-left: $spacing-03;
      }
    }

    .image {
      width: 100%;
      aspect-ratio: 1 / 1;
    }
  }

  .skill-column {
    border: 1px solid #E0E0E0;
    padding: $spacing-05;
    position: relative;
    min-height: 200px; 

    &:hover {
      h3 {
        color: $link-primary;
      }
    }


    @include breakpoint(lg) {
      &:not(:last-child) {
        border-right: none;
      }
    }
  }

  .skill-content{
    flex: 1;

  }

  .skillWrapper {
    display: flex;
    width: 100%;
    height: 100%;
    flex-direction: column;
    justify-content: space-between;
    align-items: flex-start;

  }

  .info-graph {
    flex-shrink: 0;
    width: 48px;
    height: 48px;
    display: flex;
    justify-content: center;
    align-self: end;
  }

  .skills-section {
    padding: $spacing-09 0;
    background-color: $layer-02;

    h3 {
      @include type-style('productive-heading-03');
      margin-bottom: $spacing-03;
    }

    p {
      @include type-style('body-compact-02');
      margin-bottom: $spacing-06;
    }
  }

  //project section

  .mkt-project,
  .des-dev-project {
    padding-top: $spacing-06;
  }

  .des-header {
    margin: $spacing-07 0;
  }

  .des-cards {
    margin: $spacing-09 0;
  }

}

// gallery section
.gallery-section {
  margin-bottom: $spacing-09;
  padding-top: $spacing-09;
}

.gallery-text {
  display: flex;
  justify-content: space-between;
  padding: $spacing-07 $spacing-05;
  background-color: $field-01;
}

.g-link {
  justify-self: end;
  align-self: flex-end;
}

.g-headline {
  margin-bottom: $spacing-07;
}

.gallery-grid {
  display: flex;
  flex-wrap: wrap;
  margin-top: 0; 
}

.gallery-item {
  position: relative;
  padding: 0; 

  &::before {
    content: '';
    display: block;
    padding-top: 50%; 
  }

  img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

.gallery-item-large {
  width: 62.5%;
}

.gallery-item-small {
  width: 37.5%;
}

@media (max-width: 1056px) {
  .gallery-item {
    width: 50% !important;
  }
}

@media (max-width: 672px) {
  .gallery-item {
    width: 100% !important;
  }
}

================
File: src/pages/Work.jsx
================
import React from 'react';
import { Grid, Column, Breadcrumb, BreadcrumbItem } from '@carbon/react';

import ProjectCardD from '../components/ProjectCard/ProjectCardD';
import ProjectCardC from '../components/ProjectCard/ProjectCardC';
import './Work.scss';

import nomNomImage from '../assets/img/Nomnom-1.png';
import tcdRentersImage from '../assets/img/TcdRenters.png';
import marketResearchImage from '../assets/img/MarketResearch.jpg';

const Work = () => {
  return (
    <div className="work-page">
      <Breadcrumb noTrailingSlash className='work-breadcrumb'>
        <BreadcrumbItem>
          <a href="/">Home</a>
        </BreadcrumbItem>
        <BreadcrumbItem isCurrentPage>Work</BreadcrumbItem>
      </Breadcrumb>

      <section className="design-dev-section">
        <Grid>
          <Column lg={16} md={8} sm={4}>
            <h1>Design and Development ↷</h1>
          </Column>
        </Grid>
        <Grid condensed>
          <ProjectCardC
            type='Graduate Project'
            title="NOMNOM Mobile App"
            description="A mobile application that addresses common frustrations in finding accurate food information by converting user-uploaded menu photos into accessible, text-based formats using AI."
            imageSrc={nomNomImage}
            link="/nomnom"
            tags={['UX Design', 'Frontend', 'React Native', 'Google Cloud', 'Gemini AI']}
          />
          <ProjectCardC
            type='Volunteer Project'
            title="TCD Renters Network"
            description="A centralised website to coordinate campaigns around issues faced by the collective student renter community at Trinity College Dublin."
            imageSrc={tcdRentersImage}
            link="/tcdrenters"
            tags={['UX Design', 'Frontend', 'Vue.js']}
          />
        </Grid>
      </section>

      <section className="marketing-section">
        <Grid>
          <Column lg={16} md={8} sm={4}>
            <h1>Marketing ↷</h1>
          </Column>
        </Grid>
        <Grid fullWidth>
          <ProjectCardD
            title="Market Research for R&D"
            description="Conducted in-depth user and distributor interviews for electric scooter products, formulating firsthand market insight and analysis for the R&D department."
            imageSrc={marketResearchImage}
            link="/projects/market-research"
            tags={['Market Research']}
          />
          <ProjectCardD
            title="Product Launch"
            description="Managed the successful launch of a new product line, coordinating marketing efforts across multiple channels."
            imageSrc={marketResearchImage}
            link="/projects/product-launch"
            tags={['Product Marketing']}
          />
          <ProjectCardD
            title="Process Improvement SOP"
            description="Developed and implemented standard operating procedures to streamline marketing processes and improve team efficiency."
            imageSrc={marketResearchImage}
            link="/projects/process-improvement"
            tags={['Process Optimization']}
          />
          <ProjectCardD
            title="Integrated Marketing Campaign"
            description="Led a cross-channel marketing campaign that significantly increased brand awareness and drove sales growth."
            imageSrc={marketResearchImage}
            link="/projects/marketing-campaign"
            tags={['Integrated Marketing']}
          />
        </Grid>
      </section>
    </div>
  );
};

export default Work;

================
File: src/pages/Work.scss
================
@use '@carbon/react/scss/theme' as *;
@use '@carbon/react/scss/spacing' as *;
@use '@carbon/react/scss/type' as *;
@use '@carbon/react/scss/breakpoint' as *;

.work-page {
  padding-bottom: $spacing-07;

  section {
    margin-bottom: $spacing-09;
  }

  h1 {
    @include type-style('productive-heading-07');
    margin-bottom: $spacing-09;
    color: $link-primary;
  }
}

.work-breadcrumb {
  margin-bottom: $spacing-07;
  }


.design-dev-section,
.marketing-section {
  .cds--grid {
    padding-left: 0;
    padding-right: 0;
  }
}

================
File: src/App.css
================
.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

================
File: src/App.jsx
================
import React,  { useState, useEffect }  from 'react';
import { Content } from '@carbon/react';
import {BrowserRouter as Router, Routes, Route} from 'react-router-dom';
import MyHeader from './components/Header';
import Footer from './components/Footer';
import Home from './pages/Home';
import Work from './pages/Work';
import About from './pages/About';
import Gallery from './pages/Gallery';
import NomnomCaseStudy from './pages/CaseStudy/CaseStudy01';

function App() {
  return (
    <div className='App'>
      <MyHeader />
        <Content>
          <Router>
            <Routes>
                <Route path='/' element={<Home />}  />
                <Route path='/about' element={<About />}  />
                <Route path='/work' element={<Work />}  />
                <Route path='/gallery' element={<Gallery />}  />
                <Route path='nomnom' element={<NomnomCaseStudy/>} />
            </Routes>
          </Router>
        </Content>
      <Footer />
    </div>
  );
}

export default App;

================
File: src/App.test.js
================
import { render, screen } from '@testing-library/react';
import App from './App';

test('renders learn react link', () => {
  render(<App />);
  const linkElement = screen.getByText(/learn react/i);
  expect(linkElement).toBeInTheDocument();
});

================
File: src/index.js
================
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
import reportWebVitals from './reportWebVitals';
import './index.scss';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();

================
File: src/index.scss
================
@use '@carbon/react';
@use '@carbon/react/scss/themes' as *;
@use '@carbon/styles';

================
File: src/logo.svg
================
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 841.9 595.3"><g fill="#61DAFB"><path d="M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z"/><circle cx="420.9" cy="296.5" r="45.7"/><path d="M520.5 78.1z"/></g></svg>

================
File: src/reportWebVitals.js
================
const reportWebVitals = onPerfEntry => {
  if (onPerfEntry && onPerfEntry instanceof Function) {
    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
      getCLS(onPerfEntry);
      getFID(onPerfEntry);
      getFCP(onPerfEntry);
      getLCP(onPerfEntry);
      getTTFB(onPerfEntry);
    });
  }
};

export default reportWebVitals;

================
File: src/setupTests.js
================
// jest-dom adds custom jest matchers for asserting on DOM nodes.
// allows you to do things like:
// expect(element).toHaveTextContent(/react/i)
// learn more: https://github.com/testing-library/jest-dom
import '@testing-library/jest-dom';

================
File: .gitignore
================
node_modules

================
File: package.json
================
{
  "name": "my-website",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@carbon/colors": "^11.27.0",
    "@carbon/icons-react": "^11.50.0",
    "@carbon/react": "^1.67.0",
    "@testing-library/jest-dom": "^5.17.0",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "carbon-components-react": "^8.67.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-router-dom": "^6.26.2",
    "react-scripts": "5.0.1",
    "sass": "^1.79.3",
    "styled-components": "^6.1.13",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}

================
File: README.md
================
# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in your browser.

The page will reload when you make changes.\
You may also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can't go back!**

If you aren't satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you're on your own.

You don't have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn't feel obligated to use this feature. However we understand that this tool wouldn't be useful if you couldn't customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
